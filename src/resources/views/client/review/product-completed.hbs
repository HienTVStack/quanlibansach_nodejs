{{>topbar-client}} {{>navbar-client}} {{>page-header-client}}
<style>
    input[type="number"]::-webkit-inner-spin-button,
    input[type="number"]::-webkit-outer-spin-button {
        -webkit-appearance: none;
        -moz-appearance: none;
        appearance: none;
        margin: 0;
    }
</style>
<form action="/hand-form-action" name="container-form" method="POST">
    <div class="container-fluid pt-5">
        <div class="row px-xl-5">
            <div class="col-lg-12 table-responsive mb-5">
                <div style="display: flex; align-items: center; margin-bottom: 20px;" class="d-flex">
                    <h3 style="text-align: center;">ĐÁNH GIÁ NGAY ĐỂ NHẬN THƯỞNG *</h3>
                </div>
                <table class="table table-bordered text-center mb-0">
                    <thead class="bg-secondary text-dark">
                        <tr>
                            
                            <th>STT</th>
                            <th>Hình ảnh</th>
                            <th>Tên sản phẩm</th>
                            <th>Giá</th>
                            <th>Đánh giá</th>
                        </tr>
                    </thead>
                    
                    <tbody class="align-middle">
                        {{#each product}}  {{#each this.order.products}}
                        <tr>
                            <td class="align-middle">{{@index}}</td>
                            <td class="align-middle">
                                <img src="/assets/img/product/{{this.image}}" alt="" style="width: 50px;" />
                            </td>
                            <td class="align-middle">{{this.name}}</td>
                            <td class="align-middle"><span class="price">{{this.price}}</span> x {{this.quantity}} <br> = <span class="price">{{multip this.price this.quantity}}</span></td>
                            <td class="align-middle">
                                <a href="/danh-gia/{{this.id}}/detail" class="btn btn-sm btn-primary">
                                    Đi đến đánh giá
                                </a>
                            </td>
                        </tr>
                        {{/each}} 
                        {{else}}
                        <h2>Không có sản phẩm chưa đánh giá</h2>
                        {{/each}} 
                       
                    </tbody>
                </table>
            </div>
           
            <div class="row"></div>
        </div>
    </div>
</form>
{{!-- Model delete --}}

<div class="modal" id="delete-book-modal" tabindex="-1" role="dialog">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Xoá khỏi giỏ hàng</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                Bạn có chắc muốn loại cuốn sách này khỏi giỏ hàng không ?
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Trở lại</button>
                <button type="button" id="delete-book-btn" class="btn btn-primary">Xóa bỏ</button>
            </div>
        </div>
    </div>
</div>
<form action="/:id/delectedCart" method="POST" name="deleted-action"></form>
<!-- Cart End -->

{{>footer-client}}

<script>
    var getPriceItem = document.querySelectorAll(".price");
    var getTotalPriceItem = document.querySelectorAll(".totalPriceItem");
    const totalPrice = document.querySelector("#sumTotalPrice");
    let sumQuantity = document.querySelector('#sumQuantity');
    let sum = 0;
    //console.log(totalPrice);
    function main() {
        formatVND();
    }
    // Function format price VND
    function formatVND() {
        for (let i = 0; i < getPriceItem.length; i++) {
            getPriceItem[i].textContent = formatCash(String(getPriceItem[i].textContent)) + "VNĐ";
            sum += parseInt(getTotalPriceItem[i].textContent)  
            getTotalPriceItem[i].textContent = formatCash(String(getTotalPriceItem[i].textContent)) + "VNĐ";
        }
        totalPrice.textContent = formatCash(String(sum)) + "VNĐ";
        sumQuantity.textContent = formatCash(String(getPriceItem.length))
    }
    //formatCash VND
    function formatCash(str) {
        return str
            .split("")
            .reverse()
            .reduce((prev, next, index) => {
                return (index % 3 ? next : next + ".") + prev;
            });
    }

    main();
    document.addEventListener("DOMContentLoaded", function () {
        var bookId;
        var checkboxAll = $("#checkbox-all");
        var checkboxItem = $('input[name="checkboxItem[]"]');
        var btnSubmitCheckboxAll = $("#checkbox-all-submit-btn");
        var containerForm = document.forms["container-form"];
        var deletedForm = document.forms["deleted-action"];
        var deletedBtn = document.getElementById("delete-book-btn");
        var deleteBookModal = document.getElementById("delete-book-modal");

        $("#delete-book-modal").on("show.bs.modal", function (event) {
            var button = $(event.relatedTarget); // Button that triggered the modal
            bookId = button.data("id"); // Extract info from data-* attributes
        });

        deletedBtn.onclick = function () {
            deletedForm.action = `/${bookId}/deletedCart`;
            deletedForm.submit();
        };

        checkboxAll.change("checked", function () {
            const isCheckAll = $(this).prop("checked");
            checkboxItem.prop("checked", isCheckAll);
            reRenderButtonSubmitCheckboxAll();
            btnSubmitCheckboxAll.attr("disabled", false);
        });

        checkboxItem.change("checked", function () {
            const isCheckItem = checkboxItem.length === $('input[name="checkboxItem[]"]:checked').length;
            checkboxAll.prop("checked", isCheckItem);
            reRenderButtonSubmitCheckboxAll();
            btnSubmitCheckboxAll.attr("disabled", false);
        });

        function reRenderButtonSubmitCheckboxAll() {
            var checkboxCount = $('input[name="checkboxItem[]"]:checked').length;
            if (checkboxCount > 0) {
                btnSubmitCheckboxAll.removeClass("disabled");
            } else {
                btnSubmitCheckboxAll.addClass("disabled");
            }
        }
    });
    // change text content sumTotal price
    //function sumTotalPriceSelectItem() {}

    function incrementValue(e) {
        e.preventDefault();
        var fieldName = $(e.target).data("field");
        var parent = $(e.target).closest("div");
        var currentVal = parseInt(parent.find("input[name=" + fieldName + "]").val(), 10);

        if (!isNaN(currentVal)) {
            parent.find("input[name=" + fieldName + "]").val(currentVal + 1);
        } else {
            parent.find("input[name=" + fieldName + "]").val(0);
        }
    }

    function decrementValue(e) {
        e.preventDefault();
        var fieldName = $(e.target).data("field");
        var parent = $(e.target).closest("div");
        var currentVal = parseInt(parent.find("input[name=" + fieldName + "]").val(), 10);

        if (!isNaN(currentVal) && currentVal > 0) {
            parent.find("input[name=" + fieldName + "]").val(currentVal - 1);
        } else {
            parent.find("input[name=" + fieldName + "]").val(0);
        }
    }

    $(".input-group").on("click", "#button-plus", function (e) {
        incrementValue(e);
    });

    $(".input-group").on("click", "#button-minus", function (e) {
        decrementValue(e);
    });
</script>

<script src="https://code.jquery.com/jquery-3.4.1.min.js"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/js/bootstrap.bundle.min.js"></script>
<script src="/assets/js/client/main.js"></script>
